########################################################################
#  MIPS Instruction Test Benchmark for MieruPC   Arch Lab. TOKYO TECH  #
#   Dual licensed under New BSD or GPL v2.                             #
#   See COPYING file on the base directory for more information.       #
########################################################################

        .align  2
        .text
        .set    noat
        .globl  BENCH
        .ent    BENCH
BENCH:
        addi    $29, $29, -164 # save registers
        sw      $16,    0($29)
        sw      $17,    4($29)
        sw      $18,    8($29)
        sw      $19,   12($29)
        sw      $20,   16($29)
        sw      $21,   20($29)
        sw      $22,   24($29)
        sw      $23,   28($29)
        s.s     $f0,   32($29)
        s.s     $f1,   36($29)
        s.s     $f2,   40($29)
        s.s     $f3,   44($29)
        s.s     $f4,   48($29)
        s.s     $f5,   52($29)
        s.s     $f6,   56($29)
        s.s     $f7,   60($29)
        s.s     $f8,   64($29)
        s.s     $f9,   68($29)
        s.s     $f10,  72($29)
        s.s     $f11,  76($29)
        s.s     $f12,  80($29)
        s.s     $f13,  84($29)
        s.s     $f14,  88($29)
        s.s     $f15,  82($29)
        s.s     $f16,  96($29)
        s.s     $f17, 100($29)
        s.s     $f18, 104($29)
        s.s     $f19, 108($29)
        s.s     $f20, 112($29)
        s.s     $f21, 116($29)
        s.s     $f22, 120($29)
        s.s     $f23, 124($29)
        s.s     $f24, 128($29)
        s.s     $f25, 132($29)
        s.s     $f26, 136($29)
        s.s     $f27, 140($29)
        s.s     $f28, 144($29)
        s.s     $f29, 148($29)
        s.s     $f30, 152($29)
        s.s     $f31, 156($29)
        move    $1, $0         # clear registers
        move    $2, $0
        move    $3, $0
        move    $4, $0
        move    $5, $0
        move    $6, $0
        move    $7, $0
        move    $8, $0
        move    $9, $0
        move    $10, $0
        move    $11, $0
        move    $12, $0
        move    $13, $0
        move    $14, $0
        move    $15, $0
        move    $16, $0
        move    $17, $0
        move    $18, $0
        move    $19, $0
        move    $20, $0
        move    $21, $0
        move    $22, $0
        move    $23, $0
        move    $24, $0
        move    $25, $0
        move    $26, $0
        move    $27, $0
        j       BENCH_BODY     # call benchmark body
        nop
        .end    BENCH
        .globl  BENCH_END
        .ent    BENCH_END
BENCH_END:      
        sw      $1, 160($29)   # store registers to array
        la      $1, REG        
        sw      $0,    0($1)   
        sw      $2,    8($1)
        sw      $3,   12($1)
        sw      $4,   16($1)
        sw      $5,   20($1)
        sw      $6,   24($1)
        sw      $7,   28($1)
        sw      $8,   32($1)
        sw      $9,   36($1)
        sw      $10,  40($1)
        sw      $11,  44($1)
        sw      $12,  48($1)
        sw      $13,  52($1)
        sw      $14,  56($1)
        sw      $15,  60($1)
        sw      $16,  64($1)
        sw      $17,  68($1)
        sw      $18,  72($1)
        sw      $19,  76($1)
        sw      $20,  80($1)
        sw      $21,  84($1)
        sw      $22,  88($1)
        sw      $23,  92($1)
        sw      $24,  96($1)
        sw      $25, 100($1)
        sw      $26, 104($1)
        sw      $27, 108($1)
        move    $2, $1
        lw      $1, 160($29)
        sw      $1,    4($2)
        la      $2, FREG
        s.s     $f0, 0($2)
        s.s     $f1, 4($2)
        s.s     $f2, 8($2)
        s.s     $f3, 12($2)
        s.s     $f4, 16($2)
        s.s     $f5, 20($2)
        s.s     $f6, 24($2)
        s.s     $f7, 28($2)
        s.s     $f8, 32($2)
        s.s     $f9, 36($2)
        s.s     $f10, 40($2)
        s.s     $f11, 44($2)
        s.s     $f12, 48($2)
        s.s     $f13, 52($2)
        s.s     $f14, 56($2)
        s.s     $f15, 60($2)
        s.s     $f16, 64($2)
        s.s     $f17, 68($2)
        s.s     $f18, 72($2)
        s.s     $f19, 76($2)
        s.s     $f20, 80($2)
        s.s     $f21, 84($2)
        s.s     $f22, 88($2)
        s.s     $f23, 92($2)
        s.s     $f24, 96($2)
        s.s     $f25, 100($2)
        s.s     $f26, 104($2)
        s.s     $f27, 108($2)
        s.s     $f28, 112($2)
        s.s     $f29, 116($2)
        s.s     $f30, 120($2)
        s.s     $f31, 124($2)
        lw      $16,    0($29)  # restore registers
        lw      $17,    4($29)
        lw      $18,    8($29)
        lw      $19,   12($29)
        lw      $20,   16($29)
        lw      $21,   20($29)
        lw      $22,   24($29)
        lw      $23,   28($29)
        l.s     $f0,   32($29)
        l.s     $f1,   36($29)
        l.s     $f2,   40($29)
        l.s     $f3,   44($29)
        l.s     $f4,   48($29)
        l.s     $f5,   52($29)
        l.s     $f6,   56($29)
        l.s     $f7,   60($29)
        l.s     $f8,   64($29)
        l.s     $f9,   68($29)
        l.s     $f10,  72($29)
        l.s     $f11,  76($29)
        l.s     $f12,  80($29)
        l.s     $f13,  84($29)
        l.s     $f14,  88($29)
        l.s     $f15,  82($29)
        l.s     $f16,  96($29)
        l.s     $f17, 100($29)
        l.s     $f18, 104($29)
        l.s     $f19, 108($29)
        l.s     $f20, 112($29)
        l.s     $f21, 116($29)
        l.s     $f22, 120($29)
        l.s     $f23, 124($29)
        l.s     $f24, 128($29)
        l.s     $f25, 132($29)
        l.s     $f26, 136($29)
        l.s     $f27, 140($29)
        l.s     $f28, 144($29)
        l.s     $f29, 148($29)
        l.s     $f30, 152($29)
        l.s     $f31, 156($29)
        addi    $29, $29, 164
        jr      $31
        nop
        .end    BENCH_END
        