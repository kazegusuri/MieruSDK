本資料ではMieruSDKを用いたアプリケーションの開発方法を解説します。
(MieruSDKのトップのディレクトリが~/MieruSDKであると仮定します)

MieruSDKによるアプリケーションの開発は、
・MieruSDKの初期設定（初めてMieruSDKを使う場合）
・アプリケーションディレクトリの作成
・Makefileの編集
をまず行い、
・ソースの編集
・コンパイル
・MieruPCシミュレータによるアプリケーションのテスト
を繰り返すことで行います。
開発したアプリケーションは、
・MMCへの書き込み
を行うことで、MieruPCの実機上で動作させることができます。

*MieruSDKの初期設定
初めてMieruSDKを使う場合は、まず最初に、buildrootで作成したツールキットのbinディレクトリにパスを通します。
ただし、なんらかの理由でパスを通せない場合には~/MieruSDK/etc/config/base.mkを開きCMDPREFにて絶対パスを指定することもできます。
次に、MieruSDKのトップディレクトリでmakeコマンドを実行し、OS、ライブラリ、シミュレータ等のコンパイルを行います。
$ cd ~/MieruSDK
$ make

**コンパイルできない場合
1. mipsel-linux-gccにパスが通ってるか確認．
2. libgtk2.0-devのパッケージがインストールされているか(液晶シミュレータで必要)

*アプリケーションディレクトリの作成
新しくアプリケーションを開発する場合は、appディレクトリの下のtemplateディレクトリを
基に、新しいディレクトリをappディレクトリの下に作成します。
ここでは作成するディレクトリの名前はsampleとします。
$ cd ~/MieruSDK/app
$ cp -r template sample

*Makefile編集
開発したいアプリケーションのディレクトリ（ここでは~/MieruSDK/app/sample）
を作成した後は、そのディレクトリに移動し、Makefileを編集して、
アプリケーションの名前とリンク対象のオブジェクトファイルを決定します。
$ cd ~/MieruSDK/app/sample
$ vim Makefile

**アプリケーションの名前
TARGET = template
と書かれている行の、templateという部分を書き換えることで指定することができます。
例えば、アプリケーションの名前をsampleとする場合は、
TARGET = sample
と書き換えます。

**リンク対象のオブジェクトファイル
OBJS = ...
と書かれている行を書き換えることで指定することができます。
デフォルトでは、ライブラリのオブジェクトファイルとmain.oが指定されています。
例えば、リンク対象のオブジェクトファイルをfoo.oとbar.oの2つだけにしたい場合は、
OBJS = foo.o bar.o
と書き換えます。

**その他の設定
TYPEを変更することによりコンパイルの設定を変えることができます。
TYPE = STANDALONE の場合はMieruPC(OS無し)で動作するアプリケーションを作成できます。
TYPE = APPLICATION の場合はMieruPC上で動作するOS用のアプリケーションを作成できます。
適切な値を設定し、適切な環境で実行しなければバグの原因となります。

MieruPCで使用する液晶の種類を変えることができます。
LCDTYPE = 0はMieruPC2008に付属している液晶を使用する場合。
LCDTYPE = 1はMieruPC2010に付属している液晶を使用する場合。

*ソースの編集
テキストエディタでソースファイルを編集します。
複数ファイルを使用する場合は「Makefileの編集」に従って修正が必要です。

*コンパイル
開発中のアプリケーションをコンパイルする場合は、
appディレクトリ下の開発中のアプリケーションのディレクトリ
(ここでは~/MieruSDK/app/sample)でmakeコマンドを使います。
$ cd ~/MieruSDK/app/sample
$ make

*MieruPCシミュレータによるアプリケーションのテスト
appディレクトリ下の開発中のアプリケーションのディレクトリ
(ここでは~/MieruSDK/app/sample)にいると仮定します。
アプリケーション実行の前に液晶シミュレータを起動する必要があります。

1. 液晶シミュレータの起動
$ make lcd

2. アプリケーションの実行
$ make run

**補足
TYPEがAPPLICATIONの場合は実行するとOSがまず実行されます。
OSが起動すると，スタートアップスクリプトによりアプリケーションが自動的に実行されます。
TYPEがSTANDALONEの場合は直接アプリケーションが実行されます．

キーボード入力を行う場合には必ず「端末側」へ入力してください。
液晶シミュレータにフォーカスがある状態で入力しても反映されませんのでご注意下さい。

液晶シミュレータが起動している間は何度でもアプリケーション実行が可能です。
液晶シミュレータ自体を終了したい場合は右上の×ボタンなどから終了してください。

*MMCへの書き込み
MieruPCの実機でアプリケーションを動作させる場合は、アプリケーションをMMCへと書き込む必要があります。
アプリケーションをMMCへ書き込むには、2つの方法があります。

-ファイルを1つずつMMCへコピーする
~/MieruSDK/etc/fatop/mmcroot/
にシミュレータで使用されたすべてのアプリケーションが格納されています。
よって、必要なファイルをMMCにコピーすることでそのアプリケーションを実機で実行することができます。
OSを使う場合には"必ず初めに"mieruos.binをMMCにコピーする必要があります。
それ以外のファイルについてはコピーする順番を気にする必要はありません。

-MMCイメージを直接コピーする
~/MieruSDK/etc/fatop/out.dat
はmmcrootをルートディレクトリとしたMMCのイメージファイルです。
よって、ddコマンドを使うことでMMCにすべてのファイルをコピーすることができます。
$ dd if=out.dat of=/dev/sdb (MMCが/dev/sdbとして認識されている場合)
ddコマンドのofに指定するデバイスはよく確認してから使用しましょう。

**補足
MMCイメージが作成されるタイミングは
make allを行ったとき、つまりコンパイル時です．

作成されるMMCイメージはOSのイメージが最初に書き込まれるように考慮されています。
よって、OSから起動する場合でもddを使うだけで良いです。

シミュレータで使用される初期MMCイメージはout.datを使用しています。
よって、bmpビューワなどで外部ファイルが必要な場合には
~/MieruSDK/etc/fatop/mmcroot/
にあらかじめコピーしておく必要があります。

シミュレータ上でMMCの変更を行ってもout.datには影響がありません。(ライトバックしない)
変更が反映されたファイルは別のファイル名で保存されています。(out.dat_)
MMCのイメージデータを展開した場合は
~/MieruSDK/etc/fatop
に移動し
$ make out
と実行することとoutdirにイメージデータが展開されます。


*MieruSDKのディレクトリ構成

MieruSDK             : SDKルート
  |  
  |- os              : MieruOS c++バージョン
  |  |- src          : ソースファイル
  |  |- include      : インクルードファイル
  |  |- conf         : 設定ファイル
  |
  |- sim             : 
  |   |- SimMips     : MieruPCのシミュレータ
  |   |- lcd         : 液晶シミュレータ
  |
  |- app             : 
  |   |- template    : アプリケーションのテンプレート
  |   |- sample      : 
  |       |- command : 基本的なコマンド．SDKインストール時にコンパイルされる．
  |       |- tool    : MieruPC上で動作するの有用なアプリケーション
  |       |- game    : MieruPC上で動作するゲーム
  |       |- test    : テストアプリ
  |
  |- lib             : OSとアプリの共通ライブラリ
  |
  |- etc             : 設定ファイルやツールなど
  |   |- config      : 設定ファイル
  |   |- memgen      : バイナリイメージ作成ツール
  |   |- fatop       : MMCを操作するツール
  |       |- mmcroot : MMCの元となるデータを集めるディレクトリ
  |
  |- doc             : ドキュメント

